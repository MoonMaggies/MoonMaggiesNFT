{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","publicSale","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","PUBLIC_SALE_PRICE","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","color","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","params","chainId","utils","toHex","SmartContractObj","on","location","reload","Boolean","fontSize","fontWeight","Number","width","height","target","href","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","baseFee","String","totalCostWei","totalGasLimit","mint","send","maxFeePerGas","maxPriorityFeePerGas","to","from","value","once","err","then","receipt","claimNFTs","url","xmlns","viewBox","id","transform","d","fill","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6734149.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  publicSale: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        publicSale: action.payload.publicSale,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let publicSale = await store\n      .getState()\n      .blockchain.smartContract.methods.publicSale()\n      .call();\n      console.log(publicSale)\n\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n       let cost = await store\n         .getState()\n         .blockchain.smartContract.methods.PUBLIC_SALE_PRICE()\n        .call();\n      console.log(totalSupply)\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          publicSale,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId != CONFIG.NETWORK.ID) {\n          await ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: Web3.utils.toHex(CONFIG.NETWORK.ID) }],\n          });\n        }\n        const SmartContractObj = new Web3EthContract(\n          abi,\n          CONFIG.CONTRACT_ADDRESS\n        );\n        dispatch(\n          connectSuccess({\n            account: accounts[0],\n            smartContract: SmartContractObj,\n            web3: web3,\n          })\n        );\n        // Add listeners start\n        ethereum.on(\"accountsChanged\", (accounts) => {\n          dispatch(updateAccount(accounts[0]));\n        });\n        ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        // Add listeners end\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { SocialIcon } from 'react-social-icons';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 100px;\n  @media (min-width: 767px) {\n    width: 500px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px solid var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const dispCost = data.cost * 0.000000000000000001;\n\n  \n  console.log(data.publicSale);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    \n    if (data.publicSale) {\n      //minting\n        let cost = data.cost;\n        let gasLimit = CONFIG.GAS_LIMIT;\n        let baseFee = String(33000000000);\n        let totalCostWei = String(cost * mintAmount);\n        let totalGasLimit = String(gasLimit * mintAmount);\n        console.log(\"Cost: \", totalCostWei);\n        console.log(\"Gas limit: \", totalGasLimit);\n        setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n        setClaimingNft(true);\n        blockchain.smartContract.methods\n          .mint(mintAmount)\n          .send({\n            gasLimit: String(totalGasLimit),\n            maxFeePerGas: baseFee,\n            maxPriorityFeePerGas: baseFee,\n            to: CONFIG.CONTRACT_ADDRESS,\n            from: blockchain.account,\n            value: totalCostWei,\n          })\n          .once(\"error\", (err) => {\n            console.log(err);\n            setFeedback(\"Sorry, something went wrong please try again later.\");\n            setClaimingNft(false);\n          })\n          .then((receipt) => {\n            console.log(receipt);\n            setFeedback(\n              `Watch out ${CONFIG.NFT_NAME} swooping your ass, go visit Opensea.io to go see them.`\n            );\n            setClaimingNft(false);\n            dispatch(fetchData(blockchain.account));\n          });\n        }\n      else {\n        setFeedback(\"Public Sale isnt open yet. Please check back later or search the twitter/discord for more information\");\n      }\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    console.log(data.publicSale)\n    console.log(data.totalSupply)\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n\n\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n    console.log(data.publicSale)\n  }, [blockchain.account]);\n\n\n  return (\n\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 5, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.jpg\" : null}\n      >\n         <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </s.Container>\n        <ResponsiveWrapper flex={1} style={{ padding: 10}} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px solid var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n            \n          >\n            <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                Moon Birds derivative with an aussie twist. Watch out for these cunts as they might swoop ya from behind.\n            </s.TextDescription>\n              <>\n\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      Connect to the {CONFIG.NETWORK.NAME} network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : Boolean(data.publicSale) == true ? (\n                  <>\n                  <s.TextTitle\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: 50,\n                    fontWeight: \"bold\",\n                    color: \"var(--accent-text)\",\n                  }}\n                  >\n                  {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    color: \"var(--primary-text)\",\n                  }}\n                >\n                                  <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  {Number(data.cost) > 0 ? ( <>Mint cost  {data.cost/1000000000000000000}{\" \"} <img src=\"/logos/ethlogo.png\" width=\"20\" height=\"20\"></img>Each</>) : (<>Free Mint</>)}\n\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Plus gas.\n                </s.TextDescription>\n\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n                  <>\n                    <s.TextTitle\n                      style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                    >\n                      The sale has ended.\n                    </s.TextTitle>\n                    <s.TextDescription\n                      style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                    >\n                      You can still find {CONFIG.NFT_NAME} on\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                      {CONFIG.MARKETPLACE}\n                    </StyledLink>\n                    \n                  </>\n                ) : ( <>\n                  <> { console.log(data.publicSale) }\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"BUSY\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                  </>)}\n                  </>\n                ): (<>\n                Project Hasnt Started Minting  </>)}\n              \n              </>\n            <s.SpacerMedium />\n            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n            <SocialIcon url=\"https://twitter.com/MoonMaggies\" />\n            <SocialIcon url=\"https://discord.gg/KKS9kj46zt\" />\n            <a href={CONFIG.SCAN_LINK}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" url width=\"50\" height=\"50\" viewBox=\"0 0 293.775 293.667\">\n                <g id=\"etherscan-logo-light-circle\" transform=\"translate(-219.378 -213.333)\">\n                  <path id=\"Path_1\" data-name=\"Path 1\" d=\"M280.433,353.152A12.45,12.45,0,0,1,292.941,340.7l20.737.068a12.467,12.467,0,0,1,12.467,12.467v78.414c2.336-.692,5.332-1.43,8.614-2.2a10.389,10.389,0,0,0,8.009-10.11V322.073a12.469,12.469,0,0,1,12.467-12.47h20.779a12.47,12.47,0,0,1,12.467,12.47v90.276s5.2-2.106,10.269-4.245a10.408,10.408,0,0,0,6.353-9.577V290.9a12.466,12.466,0,0,1,12.465-12.467h20.779A12.468,12.468,0,0,1,450.815,290.9v88.625c18.014-13.055,36.271-28.758,50.759-47.639a20.926,20.926,0,0,0,3.185-19.537,146.6,146.6,0,0,0-136.644-99.006c-81.439-1.094-148.744,65.385-148.736,146.834a146.371,146.371,0,0,0,19.5,73.45,18.56,18.56,0,0,0,17.707,9.173c3.931-.346,8.825-.835,14.643-1.518a10.383,10.383,0,0,0,9.209-10.306V353.152\" transform=\"translate(0 0)\" fill=\"#fff\"/>\n                  <path id=\"Path_2\" data-name=\"Path 2\" d=\"M244.417,398.641A146.808,146.808,0,0,0,477.589,279.9c0-3.381-.157-6.724-.383-10.049-53.642,80-152.686,117.405-232.79,128.793\" transform=\"translate(35.564 80.269)\" fill=\"#bfcfda\"/>\n                </g>\n              </svg>\n            </a>\n            <a href=\"https://opensea.io/collection/moon-maggies\">\n            <img src=\"/logos/opensea.png\" width=\"50\" height=\"50\"></img>\n            </a>\n            </s.Container>\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/example.gif\"}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Please make sure you are connected to the \n            ({CONFIG.NETWORK.NAME} Mainnet)\n          </s.TextDescription>\n          <s.SpacerSmall />\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}